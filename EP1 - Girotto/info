> A seção de "Protocol Overview" no artigo da wikipedia é bastante útil.

> Usamos o filezilla para se comunicar com o servidor de teste FTP fornecido pelo colega no PACA.

> Para enxergamos como o protocolo funciona, começamos o Wireshark com sudo, e filtramos para ver
  apenas as mensagens do IP do servidor do colega com o seguinte comando:
  (ip.src == 18.222.123.208 ||   ip.dst == 18.222.123.208) && ftp

> Lembre-se: autenticação não é necessária. Podemos dar entrada de sucesso toda vez.

> O 2, 3 e 4 precisam do PASV antes. Ler o RFC para entender a respota do PASV,
  e fazer a conta necessaria para entender qual é a porta que tem que abrir a segunda
  conexão. Pode copiar a parte que ja esta pronta, é essencialmente igual, mas tem que
  mudar as variaveis conforme necessario.

> Pode mesmo ignorar as mensagens TCP do Wireshark.

> É importante testar o servidor utilizando-se do cliente FTP do Shell, e ver se ele consegue
  se comunicar adequadamente.

> O modo de conexão para transferencia de arquivos pode ser somente o modo binario.

> É necessario criar um processo novo toda vez que for fazer uma transferencia
  (acho que isso tem a ver com o fato de que é necessario criar uma nova conexao, um novo socket,
   toda vez que vamos realizar uma transferencia de arquivos no modo passivo, e isto implica em um
   novo processo em nossa logica)

> É interessante testar com duas maquinas diferentes: uma rodando o servidor, e outra o cliente

> Encontramos o IP externo do computador utilizando-se do comando:
  dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | awk -F'"' '{ print $2}'


--------------------------------------------------------------------------------------

COMPORTAMENTOS ESPERADOS (conforme seção 2.1 do enunciado)

1:
  > Response: 220 GyroFTP 0.0.1 Server (Manjaro)
  > Request: USER user (sendo "user" o usuario de escolha do cliente)
  > Response: 331 password required for user
  > PASS password (sendo "password" a senha para o usuario escolhido, que pode ser qualquer um, pois não autenticamos)
  > 230 User user logged in

Antes do 2, 3 e 4, é necessário declarar o modo passivo:
  > Request: PASV
  > Response: "send a server IP address and server port number from the server"
  > Request: "the client then uses the previous information to open a data connection from an arbitrary client port to the server IP address and server port number received"

2:
  > Request: RETR filename
  > Response: 550 "filename": no such file or directory

3:
  > Request: RETR filename
  > Response: 150 File status okay; about to open data connection.
  > Response: 226 Closing data connection.
             Requested file action successful (for example, file
             transfer or file abort).

4:
  > Request: STOR filename
  > Response: 150 File status okay; about to open data connection.
  > Response: 226 Closing data connection.
             Requested file action successful (for example, file
             transfer or file abort).

5:
  > Request: DELE filename
  > Response: 250 DELE command successful

6:
  > Request: LIST
  > Response: 150 File status okay; about to open data connection.
  > Response: 226 Closing data connection.
             Requested file action successful (for example, file
             transfer or file abort).

  No console:
  -rw-r--r--   1 ftp      nogroup         0 Aug 15 18:51 "asalk"
  -rw-r--r--   1 ftp      nogroup    648192 Aug 15 16:59 TCP IP.ppt
  -rw-r--r--   1 ftp      nogroup        32 Aug 19 22:17 thanku
  -rw-r--r--   1 root     root            0 Aug 15 17:07 welcome.msg

  (Isto ocorre entre o 150 e o 226).

7:
  Request: QUIT
  Response: 221 Goodbye
